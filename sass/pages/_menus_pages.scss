/** @format */
@mixin grid($grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)), $grid-gap: #{$size*2}) {
  display: grid;
  grid-template-columns: $grid-template-columns;
  grid-gap: $grid-gap;
} 
.wrapper {
  @include tv {
    @include grid;
    grid-template-areas: "img main main";
    width: 100%;
    background: $bg-grey;
    .hero__page_menu {
      height: 68vh;
      width: 70vh;
      &--img {
        grid-area: img;
        height: 68vh;
      }
    }
  }
}
.hero__page_menu {
  &--img {
    height: 50vh;
    width: 100%;
    max-width: 100%;
    object-fit: cover;
  }
}

.resto {
  @include grid;
  width: 100%;
  margin-top: map-get($sizing, low) * -6;
  @include padding-resto;
  position: relative;
  display: block;
  border-radius: 4rem 4rem 0 0;
  background: $resto-bg;
  z-index: 1;
  padding: map-get($sizing, regular);
  @include tablet {
    max-width: 100%;
    grid-template-areas:
      "title title"
      "starter middle"
      "finish btn";
  }
  @include desktop {
    display: grid;
    grid-template-areas:
      "title title btn"
      "starter middle finish";
  }
  @include tv {
    grid-area: main;
    height: 68vh;
    width: calc(100% + $size * 3);
    margin-top: 0;
    border-radius: 4rem 0 0 4rem;
    grid-template-areas:
      "title title btn"
      "starter middle finish";
  }

  &__menu {
    grid-area: title;
    @include flexbox($justify-content: space-between);
    margin-bottom: map-get($sizing, low) * 2;
    @include desktop {
      @include flexbox($justify-content: start);
      margin-bottom: 0;
    }
    @include tv {
      @include flexbox($justify-content: start);
      margin-bottom: 0;
    }
    &--title {
      font-family: $shrikhand;
      padding: (map-get($sizing, low) * 2) 0;
      font-size: map-get($sizing, low) * 1.5;
      z-index: 1;
      @include tablet {
        font-size: map-get($sizing, low) * 2;
      }
    }

    &--btn {
      grid-area: heart;
      @include heart($justify-content: center, $color: $resto-bg);
      @include tv {
        padding-left: 3rem;
      }
    }

    &--like {
      @include heart-hover(
        $justify-content: center,
        $align-items: start,
        $bg: $resto-bg
      );
      padding-right: map-get($sizing, low) * 1.7;
    }
  }
}
.menu__starter,
.menu__middle {
  margin-bottom: map-get($sizing, low) * 3.5;
}

.menu__starter {
  grid-area: starter;
  animation: appearance 1s both ease-in-out;
}

.menu__middle {
  grid-area: middle;
  animation: appearance 1.4s 800ms both ease-in-out;
}

.menu__finish {
  grid-area: finish;
  animation: appearance 1.6s 1.6s both ease-in-out;
}

.wrapper__btn {
  grid-area: btn;
  animation: appearance 2s 2.4s both ease-in-out;
}

@keyframes appearance {
  0% {
    opacity: 0;
    transform: translateY(10px);
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

.menu__choice {
  display: flex;
  background: $color-white;
  position: relative;
  box-shadow: $card-shadow;
  padding: map-get($sizing, low);
  margin-bottom: map-get($sizing, low) * 1.5;
  border-radius: map-get($sizing, low) * 1.25;
  overflow: hidden;
  cursor: pointer;

  &--title {
    flex-shrink: 5;
    @include text-ellipsis;
  }

  &--price {
    flex-grow: 1;
    @include flexbox($justify-content: flex-end, $align-items: flex-end);
    margin: 0;
    font-weight: 700;
    padding-left: map-get($sizing, low) * 3;
    @include text-ellipsis;
  }

  &--selected {
    @include flexbox($justify-content: center, $align-items: center);
    background-color: $color-tertiary;
    margin: (map-get($sizing, low) * -1) (map-get($sizing, low) * -5) (map-get($sizing, low) * -1) map-get($sizing, low);
    width: map-get($sizing, low) * 4;
    transition-duration: 1s;
  }
  &:hover &--selected {
    margin-right: map-get($sizing, low) * -1;
  }
  &--transform {
    @include flexbox($justify-content: center, $align-items: center);
    @include dimension(#{$size * 1.6});
    background: $color-white;
    border-radius: map-get($sizing, low) * 6.25;
    transform: rotate(180deg);
    transition-duration: 1s;
  }
  &:hover &--transform {
    transform: rotate(0);
  }
  &--checked {
    color: $color-tertiary;
  }
}

.menu__choice:hover {
  cursor: pointer;

  &--price {
    transform: translateX(-70px);
  }

  &--selected {
    transform: scaleX(1);
  }

  &--transform {
    transform: rotate(1turn);
  }
}

.wrapper__btn {
  @include flexbox($justify-content: center);
  text-decoration: none;
  padding: map-get($sizing, low) * 3;

  &--order {
    @include btn;
    cursor: pointer;
  }
  @include tablet {
    @include flexbox($justify-content: center);
    padding: (map-get($sizing, low) * 3.75) 0 0 (map-get($sizing, low) * 3.75);
  }
  @include desktop {
    @include flexbox($justify-content: end);
    padding: 0;
  }
  @include tv {
    @include flexbox($justify-content: end);
  }
}
